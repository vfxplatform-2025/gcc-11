# rezbuild.py (Stage1 gcc)
import os
import sys
import subprocess
import shutil

def run_cmd(cmd, cwd=None, env=None):
    print(f"[RUN] {cmd}")
    subprocess.run(cmd, cwd=cwd, env=env or os.environ, shell=True, check=True)

def clean_dir(path):
    if os.path.exists(path):
        print(f"üßπ Removing: {path}")
        shutil.rmtree(path)

def build(source_path, build_path, install_path, targets):
    version = os.environ.get("REZ_BUILD_PROJECT_VERSION", "11.5.0")

    src_dir = os.path.join(source_path, "source", f"gcc-{version}")
    build_dir = os.path.join(build_path, "gcc-build")
    clean_dir(build_dir)
    os.makedirs(build_dir, exist_ok=True)

    # binutils Í≤ΩÎ°ú (Ïù¥ÎØ∏ ÏÑ§ÏπòÎêú toolchain ÎÇ¥)
    binutils_path = "/core/Linux/APPZ/packages/binutils/2.38"  # ÏòàÏãú

    # ÌôòÍ≤Ω ÏÑ§Ï†ï
    env = os.environ.copy()
    env["PATH"] = f"{binutils_path}/bin:" + env["PATH"]

    configure_cmd = f"""
        {src_dir}/configure \
          --prefix={install_path} \
          --target=x86_64-linux-gnu \
          --disable-nls \
          --disable-shared \
          --disable-multilib \
          --disable-threads \
          --disable-libssp \
          --enable-languages=c,c++ \
          --without-headers
    """

    run_cmd(configure_cmd, cwd=build_dir, env=env)
    run_cmd("make all-gcc -j$(nproc)", cwd=build_dir, env=env)
    run_cmd("make install-gcc", cwd=build_dir, env=env)

if __name__ == '__main__':
    build(
        source_path=os.environ["REZ_BUILD_SOURCE_PATH"],
        build_path=os.environ["REZ_BUILD_PATH"],
        install_path=os.environ["REZ_BUILD_INSTALL_PATH"],
        targets=sys.argv[1:]
    )

